#include <stdio.h>

#define TAM_TABULEIRO 10
#define TAM_NAVIO 3

// ========================================================
// Parte 1 - Movimentos das peças de xadrez
// ========================================================
void movimentosXadrez() {
    // ===============================
    // Movimento da Torre
    // ===============================
    printf("Movimento da Torre:\n");
    for (int i = 0; i < 3; i++) {
        printf("Cima\n");
    }
    for (int j = 0; j < 2; j++) {
        printf("Direita\n");
    }

    // ===============================
    // Movimento da Rainha
    // ===============================
    printf("\nMovimento da Rainha:\n");
    for (int i = 0; i < 2; i++) {
        printf("Baixo\n");
    }
    int j = 0;
    while (j < 2) {
        printf("Esquerda\n");
        j++;
    }

    // ===============================
    // Movimento do Bispo
    // ===============================
    printf("\nMovimento do Bispo:\n");
    for (int i = 0; i < 2; i++) {
        printf("Baixo\n");
        printf("Direita\n");
    }

    // ===============================
    // Movimento do Cavalo
    // ===============================
    printf("\nMovimento do Cavalo:\n");
    for (int i = 0; i < 2; i++) {
        printf("Baixo\n");
    }
    int k = 0;
    while (k < 1) {
        printf("Esquerda\n");
        k++;
    }
}

// ========================================================
// Parte 2 - Tabuleiro Batalha Naval
// ========================================================
void inicializarTabuleiro(int tabuleiro[TAM_TABULEIRO][TAM_TABULEIRO]) {
    for (int i = 0; i < TAM_TABULEIRO; i++) {
        for (int j = 0; j < TAM_TABULEIRO; j++) {
            tabuleiro[i][j] = 0;
        }
    }
}

int posicaoLivre(int tabuleiro[TAM_TABULEIRO][TAM_TABULEIRO], int linha, int coluna) {
    return (tabuleiro[linha][coluna] == 0);
}

void posicionarHorizontal(int tabuleiro[TAM_TABULEIRO][TAM_TABULEIRO], int linha, int coluna) {
    if (coluna + TAM_NAVIO <= TAM_TABULEIRO) {
        for (int i = 0; i < TAM_NAVIO; i++) {
            if (posicaoLivre(tabuleiro, linha, coluna + i)) {
                tabuleiro[linha][coluna + i] = 3;
            }
        }
    }
}

void posicionarVertical(int tabuleiro[TAM_TABULEIRO][TAM_TABULEIRO], int linha, int coluna) {
    if (linha + TAM_NAVIO <= TAM_TABULEIRO) {
        for (int i = 0; i < TAM_NAVIO; i++) {
            if (posicaoLivre(tabuleiro, linha + i, coluna)) {
                tabuleiro[linha + i][coluna] = 3;
            }
        }
    }
}

void posicionarDiagonalPrincipal(int tabuleiro[TAM_TABULEIRO][TAM_TABULEIRO], int linha, int coluna) {
    if (linha + TAM_NAVIO <= TAM_TABULEIRO && coluna + TAM_NAVIO <= TAM_TABULEIRO) {
        for (int i = 0; i < TAM_NAVIO; i++) {
            if (posicaoLivre(tabuleiro, linha + i, coluna + i)) {
                tabuleiro[linha + i][coluna + i] = 3;
            }
        }
    }
}

void posicionarDiagonalSecundaria(int tabuleiro[TAM_TABULEIRO][TAM_TABULEIRO], int linha, int coluna) {
    if (linha + TAM_NAVIO <= TAM_TABULEIRO && coluna - (TAM_NAVIO - 1) >= 0) {
        for (int i = 0; i < TAM_NAVIO; i++) {
            if (posicaoLivre(tabuleiro, linha + i, coluna - i)) {
                tabuleiro[linha + i][coluna - i] = 3;
            }
        }
    }
}

void exibirTabuleiro(int tabuleiro[TAM_TABULEIRO][TAM_TABULEIRO]) {
    printf("\n=== TABULEIRO BATALHA NAVAL ===\n\n");
    for (int i = 0; i < TAM_TABULEIRO; i++) {
        for (int j = 0; j < TAM_TABULEIRO; j++) {
            printf("%d ", tabuleiro[i][j]);
        }
        printf("\n");
    }
}

// ========================================================
// Programa principal
// ========================================================
int main() {
    // Parte 1: movimentos das peças
    movimentosXadrez();

    // Parte 2: batalha naval
    int tabuleiro[TAM_TABULEIRO][TAM_TABULEIRO];
    inicializarTabuleiro(tabuleiro);

    // Posiciona os navios
    posicionarHorizontal(tabuleiro, 2, 4);          // Navio 1
    posicionarVertical(tabuleiro, 6, 1);            // Navio 2
    posicionarDiagonalPrincipal(tabuleiro, 0, 0);   // Navio 3
    posicionarDiagonalSecundaria(tabuleiro, 0, 9);  // Navio 4

    // Exibe o tabuleiro final
    exibirTabuleiro(tabuleiro);

    return 0;
}


